"""counts workflow

Revision ID: bf3a813db37e
Revises: 0e11c70a13cf
Create Date: 2025-10-09 15:10:59.184270

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'bf3a813db37e'
down_revision: Union[str, Sequence[str], None] = '0e11c70a13cf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('counts', sa.Column('count', sa.Integer(), nullable=False))
    op.add_column('counts', sa.Column('status', sa.String(length=20), nullable=False))
    op.add_column('counts', sa.Column('submitted_by', sa.Integer(), nullable=False))
    op.add_column('counts', sa.Column('submitted_at', sa.DateTime(timezone=True), nullable=False))
    op.add_column('counts', sa.Column('approved_by', sa.Integer(), nullable=True))
    op.add_column('counts', sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('counts', 'last_updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.drop_constraint(op.f('counts_updated_by_fkey'), 'counts', type_='foreignkey')
    op.create_foreign_key(None, 'counts', 'users', ['submitted_by'], ['id'])
    op.create_foreign_key(None, 'counts', 'users', ['approved_by'], ['id'])
    op.drop_column('counts', 'quantity')
    op.drop_column('counts', 'updated_by')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('counts', sa.Column('updated_by', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('counts', sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'counts', type_='foreignkey')
    op.drop_constraint(None, 'counts', type_='foreignkey')
    op.create_foreign_key(op.f('counts_updated_by_fkey'), 'counts', 'users', ['updated_by'], ['id'])
    op.alter_column('counts', 'last_updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.drop_column('counts', 'approved_at')
    op.drop_column('counts', 'approved_by')
    op.drop_column('counts', 'submitted_at')
    op.drop_column('counts', 'submitted_by')
    op.drop_column('counts', 'status')
    op.drop_column('counts', 'count')
    # ### end Alembic commands ###
